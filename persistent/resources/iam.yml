Resources:
  # For the lambda which creates the email text for the reseller
  MailRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: MailRole 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        # Minimal Access
        - PolicyName: CloudWatchFullAccess
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                    # Only Actions for logging
                      "Action": [
                          "cloudwatch:*",
                          "logs:*"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  }
                  ,
                  {
                      "Condition": {
                          "StringLike": {
                              "iam:AWSServiceName": "events.amazonaws.com"
                          }
                      },
                      "Action": "iam:CreateServiceLinkedRole",
                      "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
                      "Effect": "Allow"
                  }
              ]
            }
  # For the lambda which confirms a user sign-up
  UserVerifyRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: UserVerifyRole 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        # Minimal Access
        - PolicyName: CloudWatchFullAccess
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                    # Only Actions for logging
                      "Action": [
                          "cloudwatch:*",
                          "logs:*"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  }
                  ,
                  {
                      "Condition": {
                          "StringLike": {
                              "iam:AWSServiceName": "events.amazonaws.com"
                          }
                      },
                      "Action": "iam:CreateServiceLinkedRole",
                      "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
                      "Effect": "Allow"
                  }
              ]
            }
        - PolicyName: CognitoConfirmer
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                    # Only Actions for logging
                      "Action": [
                          "cognito-idp:AdminConfirmSignUp"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  }
                  ,
                  {
                      "Condition": {
                          "StringLike": {
                              "iam:AWSServiceName": "events.amazonaws.com"
                          }
                      },
                      "Action": "iam:CreateServiceLinkedRole",
                      "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
                      "Effect": "Allow"
                  }
              ]
            }
  # For the lambda which assigns subscription to a user
  AssignRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: AssignRole 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        # Minimal Access
        - PolicyName: DynamoDBFullAccess
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Action": [
                          "dynamodb:*",
                      ],
                      "Effect": "Allow",
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "iam:CreateServiceLinkedRole"
                      ],
                      "Resource": "*",
                      "Condition": {
                          "StringEquals": {
                              "iam:AWSServiceName": [
                                  "replication.dynamodb.amazonaws.com",
                                  "dax.amazonaws.com",
                                  "dynamodb.application-autoscaling.amazonaws.com"
                              ]
                          }
                      }
                  }
              ]
            }
  # For the lambda which gives back the subscriptions for a specific user
  SubscriptionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: SubscriptionRole 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        # Minimal Access
        - PolicyName: DynamoDBFullAccess
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Action": [
                          # "dynamodb:BatchGetItem",
                          # "dynamodb:ConditionCheckItem",
                          # "dynamodb:Scan",
                          "dynamodb:Query" #,
                          # "dynamodb:DescribeStream",
                          # "dynamodb:DescribeTimeToLive",
                          # "dynamodb:ListStreams",
                          # "dynamodb:DescribeGlobalTableSettings",
                          # "dynamodb:DescribeReservedCapacityOfferings",
                          # "dynamodb:DescribeTable",
                          # "dynamodb:GetShardIterator",
                          # "dynamodb:DescribeGlobalTable",
                          # "dynamodb:DescribeReservedCapacity",
                          # "dynamodb:GetItem",
                          # "dynamodb:DescribeContinuousBackups",
                          # "dynamodb:DescribeBackup",
                          # "dynamodb:DescribeLimits",
                          # "dynamodb:GetRecords"
                      ],
                      "Effect": "Allow",
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "iam:CreateServiceLinkedRole"
                      ],
                      "Resource": "*",
                      "Condition": {
                          "StringEquals": {
                              "iam:AWSServiceName": [
                                  "replication.dynamodb.amazonaws.com",
                                  "dax.amazonaws.com",
                                  "dynamodb.application-autoscaling.amazonaws.com"
                              ]
                          }
                      }
                  }
              ]
            }

  # For the lambda which handles the POST request from the reseller
  ResellerRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: ResellerRole 
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      
      Policies:
        - PolicyName: CloudWatchFullAccess
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Action": [
                          "cloudwatch:*",
                          "logs:*",
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Condition": {
                          "StringLike": {
                              "iam:AWSServiceName": "events.amazonaws.com"
                          }
                      },
                      "Action": "iam:CreateServiceLinkedRole",
                      "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
                      "Effect": "Allow"
                  }
              ]
            }
        - PolicyName: DynamoDBFullAccess
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Action": [
                          "dynamodb:*",
                      ],
                      "Effect": "Allow",
                      "Resource": "*"
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "iam:CreateServiceLinkedRole"
                      ],
                      "Resource": "*",
                      "Condition": {
                          "StringEquals": {
                              "iam:AWSServiceName": [
                                  "replication.dynamodb.amazonaws.com",
                                  "dax.amazonaws.com",
                                  "dynamodb.application-autoscaling.amazonaws.com"
                              ]
                          }
                      }
                  }
              ]
            }
        - PolicyName: AmazonCognitoPowerUser
          PolicyDocument: {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "cognito-identity:*",
                        "cognito-idp:*",
                        "cognito-sync:*",
                        "iam:ListRoles",
                        "iam:ListOpenIdConnectProviders"
                    ],
                    "Resource": "*"
                }
            ]
          }

  # LambdaAdminRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     Path: /
  #     RoleName: LambdaAdminRole 
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: Allow
  #           Principal:
  #             Service:
  #               - lambda.amazonaws.com
  #           Action: sts:AssumeRole
      
  #     Policies:
  #       - PolicyName: CloudWatchFullAccess
  #         PolicyDocument:
  #           {
  #             "Version": "2012-10-17",
  #             "Statement": [
  #                 {
  #                     "Action": [
  #                         "autoscaling:Describe*",
  #                         "cloudwatch:*",
  #                         "logs:*",
  #                         "iam:GetPolicy",
  #                         "iam:GetPolicyVersion",
  #                         "iam:GetRole"
  #                     ],
  #                     "Resource": "*",
  #                     "Effect": "Allow"
  #                 },
  #                 {
  #                     "Condition": {
  #                         "StringLike": {
  #                             "iam:AWSServiceName": "events.amazonaws.com"
  #                         }
  #                     },
  #                     "Action": "iam:CreateServiceLinkedRole",
  #                     "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
  #                     "Effect": "Allow"
  #                 }
  #             ]
  #           }
  #       - PolicyName: DynamoDBFullAccess
  #         PolicyDocument:
  #           {
  #             "Version": "2012-10-17",
  #             "Statement": [
  #                 {
  #                     "Action": [
  #                         "dynamodb:*",
  #                         "dax:*",
  #                         "application-autoscaling:DeleteScalingPolicy",
  #                         "application-autoscaling:DeregisterScalableTarget",
  #                         "application-autoscaling:DescribeScalableTargets",
  #                         "application-autoscaling:DescribeScalingActivities",
  #                         "application-autoscaling:DescribeScalingPolicies",
  #                         "application-autoscaling:PutScalingPolicy",
  #                         "application-autoscaling:RegisterScalableTarget",
  #                         "cloudwatch:DeleteAlarms",
  #                         "cloudwatch:DescribeAlarmHistory",
  #                         "cloudwatch:DescribeAlarms",
  #                         "cloudwatch:DescribeAlarmsForMetric",
  #                         "cloudwatch:GetMetricStatistics",
  #                         "cloudwatch:ListMetrics",
  #                         "cloudwatch:PutMetricAlarm",
  #                         "datapipeline:ActivatePipeline",
  #                         "datapipeline:CreatePipeline",
  #                         "datapipeline:DeletePipeline",
  #                         "datapipeline:DescribeObjects",
  #                         "datapipeline:DescribePipelines",
  #                         "datapipeline:GetPipelineDefinition",
  #                         "datapipeline:ListPipelines",
  #                         "datapipeline:PutPipelineDefinition",
  #                         "datapipeline:QueryObjects",
  #                         "ec2:DescribeVpcs",
  #                         "ec2:DescribeSubnets",
  #                         "ec2:DescribeSecurityGroups",
  #                         "iam:GetRole",
  #                         "iam:ListRoles",
  #                         "lambda:CreateFunction",
  #                         "lambda:ListFunctions",
  #                         "lambda:ListEventSourceMappings",
  #                         "lambda:CreateEventSourceMapping",
  #                         "lambda:DeleteEventSourceMapping",
  #                         "lambda:GetFunctionConfiguration",
  #                         "lambda:DeleteFunction"
  #                     ],
  #                     "Effect": "Allow",
  #                     "Resource": "*"
  #                 },
  #                 {
  #                     "Action": [
  #                         "iam:PassRole"
  #                     ],
  #                     "Effect": "Allow",
  #                     "Resource": "*",
  #                     "Condition": {
  #                         "StringLike": {
  #                             "iam:PassedToService": [
  #                                 "application-autoscaling.amazonaws.com",
  #                                 "dax.amazonaws.com"
  #                             ]
  #                         }
  #                     }
  #                 },
  #                 {
  #                     "Effect": "Allow",
  #                     "Action": [
  #                         "iam:CreateServiceLinkedRole"
  #                     ],
  #                     "Resource": "*",
  #                     "Condition": {
  #                         "StringEquals": {
  #                             "iam:AWSServiceName": [
  #                                 "replication.dynamodb.amazonaws.com",
  #                                 "dax.amazonaws.com",
  #                                 "dynamodb.application-autoscaling.amazonaws.com"
  #                             ]
  #                         }
  #                     }
  #                 }
  #             ]
  #           }
  #       - PolicyName: AmazonCognitoPowerUser
  #         PolicyDocument: {
  #           "Version": "2012-10-17",
  #           "Statement": [
  #               {
  #                   "Effect": "Allow",
  #                   "Action": [
  #                       "cognito-identity:*",
  #                       "cognito-idp:*",
  #                       "cognito-sync:*",
  #                       "iam:ListRoles",
  #                       "iam:ListOpenIdConnectProviders"
  #                   ],
  #                   "Resource": "*"
  #               }
  #           ]
  #         }