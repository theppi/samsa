Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /my/default/path/
      RoleName: LambdaAdminRole # required if you want to use 'serverless deploy --function' later on
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      # note that these rights are needed if you want your function to be able to communicate with resources within your vpc
      Policies:
        - PolicyName: CloudWatchFullAccess
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Action": [
                          "autoscaling:Describe*",
                          "cloudwatch:*",
                          "logs:*",
                          "sns:*",
                          "iam:GetPolicy",
                          "iam:GetPolicyVersion",
                          "iam:GetRole"
                      ],
                      "Resource": "*",
                      "Effect": "Allow"
                  },
                  {
                      "Condition": {
                          "StringLike": {
                              "iam:AWSServiceName": "events.amazonaws.com"
                          }
                      },
                      "Action": "iam:CreateServiceLinkedRole",
                      "Resource": "arn:aws:iam::*:role/aws-service-role/events.amazonaws.com/AWSServiceRoleForCloudWatchEvents*",
                      "Effect": "Allow"
                  }
              ]
            }
        - PolicyName: DynamoDBFullAccess
          PolicyDocument:
            {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Action": [
                          "dynamodb:*",
                          "dax:*",
                          "application-autoscaling:DeleteScalingPolicy",
                          "application-autoscaling:DeregisterScalableTarget",
                          "application-autoscaling:DescribeScalableTargets",
                          "application-autoscaling:DescribeScalingActivities",
                          "application-autoscaling:DescribeScalingPolicies",
                          "application-autoscaling:PutScalingPolicy",
                          "application-autoscaling:RegisterScalableTarget",
                          "cloudwatch:DeleteAlarms",
                          "cloudwatch:DescribeAlarmHistory",
                          "cloudwatch:DescribeAlarms",
                          "cloudwatch:DescribeAlarmsForMetric",
                          "cloudwatch:GetMetricStatistics",
                          "cloudwatch:ListMetrics",
                          "cloudwatch:PutMetricAlarm",
                          "datapipeline:ActivatePipeline",
                          "datapipeline:CreatePipeline",
                          "datapipeline:DeletePipeline",
                          "datapipeline:DescribeObjects",
                          "datapipeline:DescribePipelines",
                          "datapipeline:GetPipelineDefinition",
                          "datapipeline:ListPipelines",
                          "datapipeline:PutPipelineDefinition",
                          "datapipeline:QueryObjects",
                          "ec2:DescribeVpcs",
                          "ec2:DescribeSubnets",
                          "ec2:DescribeSecurityGroups",
                          "iam:GetRole",
                          "iam:ListRoles",
                          "sns:CreateTopic",
                          "sns:DeleteTopic",
                          "sns:ListSubscriptions",
                          "sns:ListSubscriptionsByTopic",
                          "sns:ListTopics",
                          "sns:Subscribe",
                          "sns:Unsubscribe",
                          "sns:SetTopicAttributes",
                          "lambda:CreateFunction",
                          "lambda:ListFunctions",
                          "lambda:ListEventSourceMappings",
                          "lambda:CreateEventSourceMapping",
                          "lambda:DeleteEventSourceMapping",
                          "lambda:GetFunctionConfiguration",
                          "lambda:DeleteFunction"
                      ],
                      "Effect": "Allow",
                      "Resource": "*"
                  },
                  {
                      "Action": [
                          "iam:PassRole"
                      ],
                      "Effect": "Allow",
                      "Resource": "*",
                      "Condition": {
                          "StringLike": {
                              "iam:PassedToService": [
                                  "application-autoscaling.amazonaws.com",
                                  "dax.amazonaws.com"
                              ]
                          }
                      }
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "iam:CreateServiceLinkedRole"
                      ],
                      "Resource": "*",
                      "Condition": {
                          "StringEquals": {
                              "iam:AWSServiceName": [
                                  "replication.dynamodb.amazonaws.com",
                                  "dax.amazonaws.com",
                                  "dynamodb.application-autoscaling.amazonaws.com"
                              ]
                          }
                      }
                  }
              ]
            }
        - PolicyName: AmazonCognitoPowerUser
          PolicyDocument: {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Action": [
                        "cognito-identity:*",
                        "cognito-idp:*",
                        "cognito-sync:*",
                        "iam:ListRoles",
                        "iam:ListOpenIdConnectProviders",
                        "sns:ListPlatformApplications"
                    ],
                    "Resource": "*"
                }
            ]
          }